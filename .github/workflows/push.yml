name: On Push to Feature Branch

on:
  push:
    branches-ignore:    
      - main
      - 'releases/**'

jobs:
  builds:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: "^1.18"
          check-latest: true

      - name: Builds and lists directory
        run: |
          ls
          go build -o ./bin/hello
          ls ./bin

      - name: Runs built binary
        run: ./bin/hello

  waits-and-test:
    runs-on: ubuntu-latest
    needs: [builds]
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: "^1.18"
          check-latest: true

      - name: Run test
        run: |
          go test -v ./main_test.go

  generative-tests:
    runs-on: ubuntu-latest
    needs: [builds]
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: "^1.18"
          check-latest: true

      - name: Run generative tests
        run: |
          echo Actually I only sleep
          sleep 10s

  unit-tests:
    runs-on: ubuntu-latest
    needs: [builds]
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: "^1.18"
          check-latest: true

      - name: Run unit tests
        run: |
          go test -count=1 -timeout 30s -run ^Test_Unit/s$ Jabst/github-actions-playground/repos -v
          
  integration-test:
    runs-on: ubuntu-latest
    needs: [builds]
    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres:13-alpine
        # Provide the password for postgres
        env:
          POSTGRES_PASSWORD: password
          POSTGRES_USERNAME: user
          POSTGRES_DBNAME: onions
        # Set health checks to wait until postgres has started
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: "^1.18"
          check-latest: true

      - name: Run integration tests
        run: |
          go test -timeout 30s -run ^Test_Integration/s$ Jabst/github-actions-playground/repos

  publish-image:
    runs-on: ubuntu-latest
    needs: [unit-tests, integration-test, generative-tests, waits-and-test]
    name: Publishing image to registry
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: "^1.18"
          check-latest: true

      - name: Publish Image to Docker Registry
        run: |
          echo I am publishing image to the registry

        